/**
 * Sequencer - A fast(?) fullscreen image-sequence player.
 * See README or visit github (link below) for details.
 * @copyright 2012-20
 * @version 3.0.0b
 * @author Andreas Gysin
 *         https://ertdfgcvb.xyz
 *         https://github.com/ertdfgcvb/Sequencer
 */
var t="ontouchstart"in window||navigator.msMaxTouchPoints;function e(t){const e=i(t);return""===e?"":t.split(e)[0]}function n(t){const e=i(t);return""===e?t:t.split(e)[1]}function i(t){const e=t.match(/\d+(?!.*\d)/g);return null===e?"":e[0]}function o(t){console.warn("Can’t parse the file sequence correctly, returning [].\nReason: "+t)}const s=[];class c{constructor(t){if(this.config=Object.assign({},{canvas:null,from:"",to:"",step:1,scaleMode:"cover",direction:"x",playMode:"drag",loop:"loop",interval:0,autoLoad:"all",fitFirstImage:!1,showLoadedImages:!1,dragAmount:10,hiDPI:!0},t),t.hasOwnProperty("retina")&&(this.config.hiDPI=t.retina),""==this.config.from&&""==this.config.to)return console.error("Missing filenames."),!1;if(!this.config.canvas){const t=document.createElement("canvas");document.body.appendChild(t),this.config.canvas=t,this.config.fitFirstImage=!0}this.pointer={x:0,y:0,down:!1},this.current=-1,this.images=[],this.directionSign=/-/.test(this.config.direction)?-1:1,this.lastLoaded=-1,this.pongSign=1,this.ctx=this.config.canvas.getContext("2d"),this.fileList=function(t,s,c=1){const a=[],r=i(t);if(""===r)return o("the first filename doesn’t contain a number."),a;const h=i(s);if(""===h)return o("the last filename doesn’t contain a number."),a;const g=e(t),f=n(t);if(g!=e(s)||f!=n(s))return o("the base-names of '"+t+"' and '"+s+"' don’t match."),a;const u=0==r.charAt(0)||0==h.charAt(0);if(u&&r.length!=h.length)return o("wrong number of leading zeros."),a;const d=parseInt(r),l=parseInt(h);if(u)for(let t=d;t<l;t+=c)a.push(g+(t+"").padStart(r.length,"0")+f);else for(let t=d;t<l;t+=c)a.push(g+t+f);return a}(this.config.from,this.config.to,this.config.step),this.size(this.ctx.canvas.width,this.ctx.canvas.height),"first"==this.config.autoLoad?new d(this.images,[this.fileList.shift()],a.bind(null,this)):"all"==this.config.autoLoad&&this.load()}load(){this.load=function(){console.log("load() can be called only once.")},new d(this.images,this.fileList,a.bind(null,this),r.bind(null,this))}run(){const e=t?"touchmove":"mousemove",n=t?"touchstart":"mousedown",i=t?"touchend":"mouseup";if("hover"===this.config.playMode)this.ctx.canvas.addEventListener(e,u.bind(null,this));else if("drag"===this.config.playMode)this.ctx.canvas.addEventListener(e,f.bind(null,this)),this.ctx.canvas.addEventListener(n,h.bind(null,this)),document.addEventListener(i,g.bind(null,this));else if("auto"===this.config.playMode){let t=0;const e=n=>{const i=n-t;i>=this.config.interval&&(this.nextImage(),t=Math.max(n,n-(i-this.config.interval))),requestAnimationFrame(e)};requestAnimationFrame(e)}}nextImage(t){t||(t=this.config.loop),"pong"===t?(this.current+=this.pongSign,this.current>=this.images.length-1?(this.pongSign=-1,this.current=this.images.length-1):this.current<=0&&(this.pongSign=1,this.current=0),this.drawImage(this.current)):this.drawImage(++this.current%this.images.length)}drawImage(t){if(void 0===t&&(t=this.current),t<0||t>=this.images.length)return;const e=this.config.hiDPI?window.devicePixelRatio:1,n=this.ctx.canvas.width/e,i=this.ctx.canvas.height/e,o=n/i,s=this.images[t],c=s.width/s.height;let a,r;"cover"==this.config.scaleMode?o>c?(a=n,r=a/c):(r=i,a=r*c):"contain"==this.config.scaleMode?o<c?(a=n,r=a/c):(r=i,a=r*c):(a=s.width,r=s.height);const h=n/2-a/2,g=i/2-r/2;this.ctx.save(),this.ctx.scale(e,e),this.ctx.clearRect(0,0,n,i),this.ctx.drawImage(s,0,0,s.width,s.height,~~h,~~g,~~a,~~r),this.ctx.restore()}size(t,e){const n=this.config.hiDPI?window.devicePixelRatio:1,i=this.ctx.canvas;i.width=t*n,i.height=e*n,i.style.width=t+"px",i.style.height=e+"px",this.drawImage()}}function a(t,e){e.id>t.lastLoaded&&t.config.showLoadedImages&&(t.drawImage(e.id),t.lastLoaded=e.id),"function"==typeof t.config.imageLoad&&(e.sequencer=t,t.config.imageLoad(e)),"function"==typeof t.imageLoad&&(e.sequencer=t,t.imageLoad(e)),0===e.id&&(t.config.fitFirstImage&&(t.size(e.img.width,e.img.height),t.config.fitFirstImage=!1),t.drawImage(0),t.current=0)}function r(t,e){"function"==typeof t.config.queueComplete&&(e.sequencer=t,t.config.queueComplete(e)),"function"==typeof t.queueComplete&&t.queueComplete(e),t.run(),t.config.showLoadedImages||"none"===t.config.playMode||t.drawImage(0)}function h(t,e){let n,i;e.touches?(n=e.touches[0].pageX-e.touches[0].target.offsetLeft,i=e.touches[0].pageY-e.touches[0].target.offsetTop):(n=e.offsetX,i=e.offsetY),t.pointer={x:n,y:i,down:!0,currentId:t.current}}function g(t,e){t.pointer.down=!1}function f(t,e){if(!t.pointer.down)return;const n=t.images.length;let i,o;e.touches?(i=e.touches[0].pageX-e.touches[0].target.offsetLeft,o=e.touches[0].pageY-e.touches[0].target.offsetTop):(i=e.offsetX,o=e.offsetY);let s=0;/x/.test(t.config.direction)?s=(i-t.pointer.x)*t.directionSign:/y/.test(t.config.direction)&&(s=(o-t.pointer.y)*t.directionSign);let c=t.pointer.currentId+Math.floor(s/t.config.dragAmount);c<0?c=n- -c%n:c>n&&(c%=n),c!=t.current&&(t.drawImage(c),t.current=c),e.preventDefault()}function u(t,e){const n=t.images.length,i=t.config.hiDPI?window.devicePixelRatio:1;let o,s,c,a;e.touches?(o=e.touches[0].pageX-e.touches[0].target.offsetLeft,s=e.touches[0].pageY-e.touches[0].target.offsetTop):(o=e.offsetX,s=e.offsetY),"x"==t.config.direction?(a=t.ctx.canvas.width/i,c=o):"-x"==t.config.direction?(a=t.ctx.canvas.width/i,c=a-o-1):"y"==t.config.direction?(a=t.ctx.canvas.height/i,c=s):"-y"==t.config.direction&&(a=t.ctx.canvas.height/i,c=a-s-1);const r=(h=Math.floor(c/a*n),f=n-1,h<(g=0)?g:h>f?f:h);var h,g,f;r!=t.current&&(t.drawImage(r),t.current=r),e.preventDefault()}function d(t,e,n,i){const o=Math.min(e.length,4);let s=t.length-1,c=t.length;for(let t=0;t<o;t++)a();function a(){if(s>=e.length-1)return;s++;const o=new Image;var r;o.src=e[s],r=s,o.onload=t=>{"function"==typeof n&&n({id:r,img:o,count:++c,total:e.length}),c<e.length&&a(),c==e.length&&"function"==typeof i&&i({total:e.length})},o.onerror=t=>{console.error("Error with: "+e[r])},t.push(o)}}var l={make:function(t){const e=new c(t);return!1!==e&&s.push(e),e},instances:s};export default l;
